@startuml Controller-Klasse

interface Promise<T>

package @nestjs/common {
  class "@Controller" as Controller
  hide Controller circle

  class "@UseGuards" as UseGuards
  hide UseGuards circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Post" as Post
  hide Post circle

  class "@Put" as Put
  hide Put circle

  class "@Delete" as Delete
  hide Delete circle

  class "@Req" as Req
  hide Req circle

  class "@Res" as Res
  hide Res circle

  class "@Param" as Param
  hide Param circle

  class "@Body" as Body
  hide Body circle

  class "@Headers" as Headers
  hide Headers circle

  UseInterceptors .[hidden].> Post
  UseInterceptors .[hidden].> Put
  UseInterceptors .[hidden].> Delete

  Post .[hidden].> Req
  Post .[hidden].> Res
  Post .[hidden].> Param
  Post .[hidden].> Body
  Post .[hidden].> Headers
}

package nest-keycloak-connect {
  class AuthGuard

  class "@Roles" as Roles
  hide Roles circle
}

package express {
  class Request
  class Response

  Response .right[hidden].> Controller
}

package packstation {
  package entity #FFFFFF {
    class Packstation <<entity>>

    Packstation .[hidden].> Promise
    Packstation .[hidden].> Request
  }

  package service {
    class PackstationWriteService << control >>
    class PackstationReadService << control >>
  }

  package rest #DDDDDD {
    class PackstationWriteController << control >> << @Controller() >> << @UseGuards() >> << @UseInterceptors() >> {
      + @Post() @Roles() async post(@Body() packstation: Packstation, @Req() req: Request,  @Res() res: Response): Promise<Response>
      + @Put() @Roles() async put(@Body() packstation: Packstation, @Param() id: number, @Headers() version: string, @Res() res: Response): Promise<Response>
      + @Delete() @Roles() async delete(@Param() id: number, @Res() res: Response): Promise<Response>
    }

    PackstationWriteController o--> "1" PackstationWriteService : service
    PackstationWriteController o--> "1" PackstationReadService : readService
    PackstationWriteController ..up> Packstation

    PackstationWriteController ..> Controller

    PackstationWriteController .up.> AuthGuard
    PackstationWriteController .up.> Roles

    PackstationWriteController ..> Request
    PackstationWriteController ..> Response
    PackstationWriteController ..> Promise

    Packstation .up[hidden].> Roles
    PackstationWriteService .[hidden].> Request
    PackstationWriteService .[hidden].> Promise
  }
}

hide empty members

@enduml
